In your own words, what is a computer really doing whenever you type a letter on a keyboard? (150 words max) 
The computer is constantly scanning and awaiting for a signal from the keyboard and a key to be pressed down and released. When a key is pressed down and released, the computer searches its memory for the image that corresponds to the code that was sent to the computer to interpret when a key was pressed. The computer is executing your command to print something made up of lines and circles and render it into a little box of pixels (in this case, a letter in your choice of font) from its memory onto your screen.
In your own words, how do computers use input and output to create experiences? (250 words max) 
Computers are waiting for your command/input and based on what you tell the computer to do, they will execute the code for that command and its display/output is the experience you will get. If I were to double-click on my Google Chrome Browser icon on my computer 17 times, I would cause myself to experience 17 chrome tabs to open. If I click on a solitaire app to open, then i will now begin to experience interacting with the solitaire app on my computer. Inside of the softwares/app that I click on are commands and specific fonts, designs, colors, text, and display orientations that are translated behind the scenes into a language that the computer is able to interpret. The output we see and the hardware we use, is translated into things humans understand.
Explain why software products are essentially “infinitely reproducible nothings.” (150 words max) 
There are countless (infinite) amounts of new software to be made and software itself is just code and nothing special. A game, an email app, or an operating system is just a bunch of 0’s and 1’s that have been orchestrated in a way to serve a specific function or show up/display on the screen as something different. When you double click, The computer loads an enormous to-do list into its memory and starts to step through it. The article provides an example of how Facebook seems like it is all of these profiles and posts but really behind it all is just software/code. Nowadays, we use an infinite amount of software, for example, in elevators, ATM’s, apps on our phones, and even grocery stores use POS software etc. It is all over the place, yet it is all just code but displayed to portray itself as something more for the user(s). Computers are usually doing things repetitively and they can really repeat actions endlessly (or until you overheat your computer). 
Explain in your own words how code becomes software. (150 words max) 
Code becomes software by being written as an explicit list of instructions that follow connected gates of logic and be executed. When the computer tries to execute your commands, it performs lexical analysis by going character by character and grouping the characters until it reaches something that it understands. For example: a computer does not understand “p” “r” “i” “n” “t”, but once it goes through all of those letters, it knows you want to print something to the screen. The compiler tries to translate the characters into instructions for the computer. The characters are grouped into tokens, saving them into one-dimensional tree boxes. Computers usually “understand” things by going character by character, bit by bit, transforming the code into other kinds of code as they go. The compiler organizes the tokens into a little tree. the computer is looking for functions and arguments. The computer continues to follow the code for instructions for the software and carries things out based on the logical gate tree.
Explain “algorithms” in your own words. (150 words max) 
An algorithm is a function or set of commands. rules, steps or processes to be followed in order to solve a problem or carry out a task. There can be many different algorithms that serve many different purposes. Most algorithms are already built into a programming language, or can be downloaded from online, organized into libraries. Algorithms can be used to carry out mathematical processes, calculations, practical expressions of ideas or other problem-solving operations.
Explain the DRY principle. (100 words max) 
DRY stands for Don’t Repeat Yourself. The DRY principle means that you should name things once, do things once, create a function once, and let the computer repeat itself. It would be exhausting to perform or have to re-write the same code over and over again, especially if it needs to be done 100+ times. That is why we make the computer do it for us, instead.
In your own words, what is object-oriented programming? (100 words max) 
Object-oriented programming gave programmers a great way to organize their code and name things in order to build up a library. Object oriented programming organizes code into libraries that are shareable and reusable, so that it is not just a bunch of functions. 
In your own words explain data and how it relates to code. (100 Words max) 
Data comes from everywhere - it can be user-created (emails, tweets, posts, documents, searches etc.), come from third parties (record labels etc.), or come from machines. Data relates to code because when you create websites, you need to get data out of a database and put them into a web page. Some good examples of data in different companies are: Spotify seeing music files as data, the IRS seeing tax returns as data, twitter seeing tweets as data, and google seeing searches as data. Programming helps to solve the problem with data management as large companies have larger amounts of data to be saved in databases. These larger amounts of data are referred to as big data. 
What is a framework? (150 words max) 
A framework is reusable code that provides specific functionality that you could use in your program. An example is the Java collections framework. If you want to sort something alphabetically, you would have to find a way to write it out but it wouldn't be an efficient use of your time because there is a framework already out there that will do this for you - in the java collections framework, you could do this in one line of code using the sort method. Frameworks allow you to have already written functionality so that you don't have to code it - instead, you can focus on the higher-level functionality of your software and be a more productive programmer.
What is debugging? (150 words max) 
Debugging is going through your code to see where things went wrong or “broke” and is the process of looking for “bugs” (faults, issues, defects) in your code and fixing the issues or removing the bug(s) - hence the term “de-bug(g)-ing”. A bug can be anywhere along the lines of not declaring (or properly declaring) a variable or forgetting a semicolon or closing bracket somewhere in your code.
Now, with more of an understanding of what code is, why do you want to learn how to code? (500 words max) 


I want to learn how to code because I am a natural problem-solver and innovative thinker. Learning how to code would open up a window to be able to technologically advance so many different industries and create so many different applications that can help with social, environmental, political and more issues in the world. I love that there are infinite and flexible possibilities especially as technology is getting more advanced, there will only be a greater need for technology as it is all around us in so many ways. In addition to the expanding of software products and the need for tech talent, there is also definitely a dire need for more women engineers as well as women engineers of color. As software engineering, Artificial Intelligence, Machine Learning etc. starts to advance, with this advancement needs to come a diverse representation of the engineers on these teams in order to make products that the diverse world we live in will be able to use, identify with, and get the full experience of. I would like to also be that trailblazer to also help more women of color get in, stay in and advance in technology/engineering. Coding is something that I believe everyone should be exposed to and be provided the resources and support they need in order to succeed in pursuing and maintaining it as a career.